name: Release Expression Compiler (manual)
on:
  workflow_dispatch:
    inputs:
      scala-version:
        required: true

jobs:
  test:
    strategy:
      fail-fast: false
    name: Test with Scala ${{ inputs.scala-version }} on ${{ inputs.tag }}
    runs-on: ubuntu-latest
    env:
      SCALA_VERSION: ${{ inputs.scala-version }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: coursier/setup-action@v1.3.4
      with:
        jvm: 'temurin:1.17.0.3'
        apps: sbt
    - name: Unit tests
      run: sbt test
      shell: bash
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    env:
      SCALA_VERSION: ${{ inputs.scala-version }}
      PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
    steps:
      - uses: actions/checkout@v4
        with:  
          submodules: true
      - uses: coursier/setup-action@v1.3.4
        with:
          apps: sbt
          jvm: 'adopt:1.8.0-292'
      - name: setup GPG secret key
        run: echo ${{ secrets.PGP_SECRET }} | base64 --decode | gpg --batch --import
      - run: sbt 'expressionCompiler3/publishSigned;sonatypeBundleRelease'
        if: startsWith(inputs.scala-version, '3') && !startsWith(inputs.scala-version, '3.0')
      - run: sbt 'expressionCompiler3_0/publishSigned;sonatypeBundleRelease'
        if: startsWith(inputs.scala-version, '3.0')
      - run: sbt 'expressionCompiler2_13/publishSigned;sonatypeBundleRelease'
        if: startsWith(inputs.scala-version, '2.13')
      - run: sbt 'expressionCompiler2_12/publishSigned;sonatypeBundleRelease'
        if: startsWith(inputs.scala-version, '2.12')
